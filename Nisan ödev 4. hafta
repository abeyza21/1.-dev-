import pandas as pd
import nltk
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.linear_model import LogisticRegression
from sklearn.model_selection import train_test_split
from sklearn.metrics import classification_report
import string
from nltk.corpus import stopwords
import re

nltk.download('stopwords')

df = pd.read_csv("spam_ham_dataset.csv")

df = df[['text', 'label_num']]

def temizle(metin):
    metin = metin.lower()  # Küçük harf yap
    metin = re.sub(r"http\S+", "", metin)  # URL sil
    metin = re.sub(r"\d+", "", metin)  # Sayılar sil
    metin = metin.translate(str.maketrans('', '', string.punctuation))  # Noktalama sil
    kelimeler = metin.split()
    stop_words = set(stopwords.words("english"))
    kelimeler = [kelime for kelime in kelimeler if kelime not in stop_words]
    return " ".join(kelimeler)

df['clean_text'] = df['text'].apply(temizle)

tfidf = TfidfVectorizer(stop_words='english', max_df=0.95, min_df=5, ngram_range=(1,2))
X = tfidf.fit_transform(df['clean_text'])
y = df['label_num']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

model = LogisticRegression(max_iter=1000)
model.fit(X_train, y_train)

y_pred = model.predict(X_test)
print(classification_report(y_test, y_pred))

